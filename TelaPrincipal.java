/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.trabalhofinal.view;

import com.mycompany.trabalhofinal.CategoriaDespesas;
import com.mycompany.trabalhofinal.CategoriaReceita;
import com.mycompany.trabalhofinal.Despesas;
import com.mycompany.trabalhofinal.Gerenciamento;
import com.mycompany.trabalhofinal.Gerenciamento.Validacoes;
import com.mycompany.trabalhofinal.Lancamento;
import com.mycompany.trabalhofinal.Receita;
import java.time.LocalDate;
import java.util.ArrayList;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class TelaPrincipal extends javax.swing.JFrame {

    private Gerenciamento gerenciamento;

    /**
     * Creates new form TelaPrincipal
     */
    public TelaPrincipal() {
        initComponents();
        gerenciamento = new Gerenciamento();
        setEnabled(true);
        try {
            gerenciamento.carregarDados();
            CarregarCategorias();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao inicializar o sistema: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    private String formatarDataParaBrasil(LocalDate data) {
        DateTimeFormatter formatoBrasileiro = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        return data.format(formatoBrasileiro);
    }

    private void gravarLancamento() {
        String dataText = jTxfData.getText();
        String valorText = jTxfValor.getText();
        String categoriaText = (String) jCbxCategoria.getSelectedItem();

        if (dataText.isEmpty() || valorText.isEmpty() || categoriaText == null) {
            JOptionPane.showMessageDialog(this, "Preencha todos os campos!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            LocalDate data = LocalDate.parse(dataText, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            double valor = Double.parseDouble(valorText.replace(",", "."));

            if (categoriaText.startsWith("RECEITA: ")) {
                String nomeCategoria = categoriaText.replace("RECEITA: ", "").trim();
                CategoriaReceita categoriaR = CategoriaReceita.valueOf(nomeCategoria);
                Receita receita = new Receita(data, valor, categoriaR);
                gerenciamento.adicionarLancamento(receita);
            } else if (categoriaText.startsWith("DESPESA: ")) {
                String nomeCategoria = categoriaText.replace("DESPESA: ", "").trim();
                CategoriaDespesas categoriaD = CategoriaDespesas.valueOf(nomeCategoria);
                Despesas despesa = new Despesas(data, valor, categoriaD);
                gerenciamento.adicionarLancamento(despesa);
            } else {
                JOptionPane.showMessageDialog(this, "Categoria inválida!", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            gerenciamento.salvarDados();
            JOptionPane.showMessageDialog(this, "Lançamento gravado com sucesso!");
            limparCampos();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao gravar lançamento: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void limparCampos() {
        jTxfValor.setText("");
        jCbxCategoria.setSelectedIndex(0);
    }

    private boolean validarCampos() {
        if (jTxfData.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Informe a data!", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (jTxfValor.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Informe o valor!", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        if (jCbxCategoria.getSelectedIndex() <= 0) {
            JOptionPane.showMessageDialog(this, "Selecione uma categoria!", "Erro", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTxfValor = new javax.swing.JTextField();
        jCbxCategoria = new javax.swing.JComboBox<>();
        jTxfData = new javax.swing.JTextField();
        jBtnGravar = new javax.swing.JButton();
        jBtnVizualizarLancamentos = new javax.swing.JButton();
        jBtnLancarExtrato = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setEnabled(false);

        jLabel1.setText("Data:");

        jLabel3.setText("Valor:");

        jLabel4.setText("Categoria:");

        jTxfValor.setToolTipText("");
        jTxfValor.setAutoscrolls(false);

        jCbxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ALIMENTACAO", "TRANSPORTE", "RESIDENCIA", "SAUDE", "EDUCACAO", "ENTRETENIMENTO", "SALARIO", "DECIMO TERCEIRO", "FERIAS", "OUTRAS", " " }));
        jCbxCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCbxCategoriaActionPerformed(evt);
            }
        });

        jTxfData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxfDataActionPerformed(evt);
            }
        });

        jBtnGravar.setText("Gravar");
        jBtnGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnGravarActionPerformed(evt);
            }
        });

        jBtnVizualizarLancamentos.setText("Vizualizar Lancamento");
        jBtnVizualizarLancamentos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnVizualizarLancamentosActionPerformed(evt);
            }
        });

        jBtnLancarExtrato.setText("Vizualizar Extrato");
        jBtnLancarExtrato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnLancarExtratoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBtnVizualizarLancamentos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnLancarExtrato)
                        .addGap(74, 74, 74))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel1)
                                    .addGap(82, 82, 82)
                                    .addComponent(jTxfData, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jTxfValor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(54, 54, 54)
                                .addComponent(jCbxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(jBtnGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTxfData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTxfValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnGravar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jCbxCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnVizualizarLancamentos)
                    .addComponent(jBtnLancarExtrato))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnVizualizarLancamentosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnVizualizarLancamentosActionPerformed
        ArrayList<Lancamento> lancamentos = gerenciamento.getTodosLancamentos();
        if (lancamentos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum lançamento cadastrado ainda.", "Informação", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        DialogLancamento dialog = new DialogLancamento(this, true, lancamentos);
        dialog.setLocationRelativeTo(this);
        dialog.setVisible(true);
    }//GEN-LAST:event_jBtnVizualizarLancamentosActionPerformed


    private void jBtnGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnGravarActionPerformed
        if (validarCampos()) {
            gravarLancamento();
        }
    }//GEN-LAST:event_jBtnGravarActionPerformed

    private void CarregarCategorias() {
        jCbxCategoria.removeAllItems();
        jCbxCategoria.addItem("");
        for (CategoriaReceita categoriaR : CategoriaReceita.values()) {
            jCbxCategoria.addItem("RECEITA: " + categoriaR.name());
        }
        for (CategoriaDespesas categoriaD : CategoriaDespesas.values()) {
            jCbxCategoria.addItem("DESPESA: " + categoriaD.name());
        }
    }

    private void jCbxCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCbxCategoriaActionPerformed
        String categoriaSelecionada = (String) jCbxCategoria.getSelectedItem();

        if (categoriaSelecionada == null || categoriaSelecionada.trim().isEmpty()) {
            return;
        }

        try {
            if (categoriaSelecionada.startsWith("RECEITA: ")) {
                String nomeCategoria = categoriaSelecionada.replace("RECEITA: ", "").trim();
                CategoriaReceita categoriaR = CategoriaReceita.valueOf(nomeCategoria);
                System.out.println("Categoria de Receita selecionada: " + categoriaR);

            } else if (categoriaSelecionada.startsWith("DESPESA: ")) {
                String nomeCategoria = categoriaSelecionada.replace("DESPESA: ", "").trim();
                CategoriaDespesas categoriaD = CategoriaDespesas.valueOf(nomeCategoria);
                System.out.println("Categoria de Despesa selecionada: " + categoriaD);
            }
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, "Categoria inválida selecionada!", "Erro", JOptionPane.ERROR_MESSAGE);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao processar categoria: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jCbxCategoriaActionPerformed

    private void jTxfDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxfDataActionPerformed
        try {
            LocalDate data = Validacoes.validarData(jTxfData.getText());
        } catch (IllegalArgumentException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_jTxfDataActionPerformed


    private void jBtnLancarExtratoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnLancarExtratoActionPerformed
        DialogExtrato dialogExtrato = new DialogExtrato(this, true, gerenciamento);
        dialogExtrato.setLocationRelativeTo(this);
        dialogExtrato.setVisible(true);
    }//GEN-LAST:event_jBtnLancarExtratoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Configura o look and feel padrão do sistema */

 /* Cria e exibe a janela principal */
        java.awt.EventQueue.invokeLater(() -> {
            TelaPrincipal tela = new TelaPrincipal();
            tela.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnGravar;
    private javax.swing.JButton jBtnLancarExtrato;
    private javax.swing.JButton jBtnVizualizarLancamentos;
    private javax.swing.JComboBox<String> jCbxCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTxfData;
    private javax.swing.JTextField jTxfValor;
    // End of variables declaration//GEN-END:variables
}
